{\rtf1\ansi\ansicpg1252\cocoartf1671
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fswiss\fcharset0 Helvetica-Bold;\f2\fswiss\fcharset0 Helvetica-Oblique;
}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww9000\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Pessoal, conforme conversei no s\'e1bado, a ideia da task da semana seria a seguinte:\
\

\f1\b - Cria\'e7\'e3o da estrutura de um aplicativo que servir\'e1 de cadastro de filmes (CRUD completo)\
- Ser\'e1 usado TabBarController com inicialmente apenas 2 telas (Filmes e Ajustes)
\f0\b0 \

\f2\i - A tela de filmes (table view controller) ir\'e1 listar os filmes cadastrados (se preocupando em mostrar algo quando n\'e3o houverem filmes)
\f0\i0 \
- 
\f1\b Ao selecionar o filme ser\'e1 mostrada a tela de detalhes do mesmo por\'e9m dever\'e1 ter tamb\'e9m um bot\'e3o na navigation bar que levar\'e1 a uma tela de cadastro de filmes, que ter\'e1 o papel de cadastro e edi\'e7\'e3o
\f0\b0 \

\f1\b - Na tela de detalhes tamb\'e9m dever\'e1 ter um bot\'e3o lvando para a tela de edi\'e7\'e3o do filme
\f0\b0 \

\f1\b - De prefer\'eancia, as telas dever\'e3o contemplar as mesmas informa\'e7\'f5es que fizemos em sala, por\'e9m com uma releitura no layout.
\f0\b0 \

\f1\b - A tela de cadastro dever\'e1 utilizar scroll view, usando as t\'e9cnicas vistas em sala
\f0\b0 \

\f1\b - A tela de ajustes ser\'e1 implementada posteriormente
\f0\b0 \

\f1\b - Todas as telas dever\'e3o ter auto-layout implementado, utilizando constraints + stack view
\f0\b0 \
\
\
\
\

\f1\b - Implementar o CRUD completo com CoreData (incluindo p\'f4ster do filme e salvando a imagem reduzida mantendo a propor\'e7\'e3o e com dimens\'e3o m\'e1xima de 800px)
\f0\b0 \

\f1\b - Criar tela de prefer\'eancias contendo prefer\'eancia de temas (cores) e autoplay
\f0\b0 \
- Fazer todas as telas do App responder ao tema de cores selecionado e tratar se o usu\'e1rio trocou o tema (ou autoplay) via settings e voltou para o App j\'e1 aberto (o App deve responder \'e0 altera\'e7\'e3o feita)\

\f1\b - O consumo da API pra pegar o trailer do filme e a feature de tocar o trailer podem ser feitas na pr\'f3xima semana, mas quem quiser a API \'e9 esta: https://itunes.apple.com/search?media=movie&entity=movie&term=  e pra utilizar \'e9 s\'f3 colocar o nome do filme ao final dela
\f0\b0 \
\
\
\
\
Galera, aproveitando, esqueci de passar o \'faltimo desafio.\
Dessa vez, vcs dever\'e3o fazer:\
- Implementar Swiftlint	\
- Escolher 2 telas para reimplementar utilizando Viewcode (utilizar Cartography \'e9 opcional)\

\f1\b - Implementar Internacionaliza\'e7\'e3o com Swiftgen
\f0\b0 \
- Implementar UnitTest e UITest (com snapshot)\

\f1\b - Implementar o consumo da API pra pegar o trailer do filme (https://itunes.apple.com/search?media=movie&entity=movie&term=NOME_DO_FILME) usando URLSession.}